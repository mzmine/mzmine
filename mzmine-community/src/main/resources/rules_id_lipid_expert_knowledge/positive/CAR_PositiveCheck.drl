package rules_id_lipid_expert_knowledge.positive;

import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.CommonAdductPositive;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.lipids.FoundLipid;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.FoundAdduct;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.params.MobilePhases;
import java.util.List;

// Declare the global list
global FoundLipid lipid;
global List mobilePhases;

rule "Presence [M+H]+"
when
    $adduct: FoundAdduct(adductName == "[M+H]+")
then
    lipid.setScore(1);
    lipid.setDescrCorrect("Contains [M+H]+, ");
    lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
end
rule "No presence [M+H]+"
when
    not FoundAdduct(adductName == "[M+H]+")
then
    lipid.setScore(-1);
    lipid.setDescrIncorrect("Missing [M+H]+, ");
    lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
end
