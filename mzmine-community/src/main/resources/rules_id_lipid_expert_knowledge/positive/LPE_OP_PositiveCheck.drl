package rules_id_lipid_expert_knowledge.positive;

import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.CommonAdductPositive;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.lipids.FoundLipid;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.FoundAdduct;

// Declare the global list
global java.util.List<FoundLipid> detectedLipids;
global FoundLipid lipid;

rule "Presence [M+H]+"
when
    $adduct: FoundAdduct(adductName == "[M+H]+")
then
    lipid.setScore(1);
    lipid.setDescrCorrect("Contains [M+H]+; ");
    //detectedLipids.add(lipid);
end

rule "Presence [M+Na]+"
when
    $adduct: FoundAdduct(adductName == "[M+Na]+")
then
    lipid.setScore(1);
    lipid.setDescrCorrect("Contains [M+Na]+; ");
    //detectedLipids.add(lipid);
end

rule "Presence [M+K]+"
when
    $adduct: FoundAdduct(adductName == "[M+K]+")
then
    lipid.setScore(1);
    lipid.setDescrCorrect("Contains [M+K]+; ");
    //detectedLipids.add(lipid);
end

rule "Presence [M+C2H7N2]+"
when
    $adduct: FoundAdduct(adductName == "[M+C2H7N2]+")
then
    lipid.setScore(1);
    lipid.setDescrCorrect("Contains [M+C2H7N2]+; ");
    //detectedLipids.add(lipid);
end

rule "Presence [M+H-H2O]+"
when
    $adduct: FoundAdduct(adductName == "[M+H-H2O]+")
then
    lipid.setScore(1);
    lipid.setDescrCorrect("Contains [M+H-H2O]+; ");
    //detectedLipids.add(lipid);
end