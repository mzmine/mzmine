package rules_id_lipid_expert_knowledge.negative;

import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.CommonAdductNegative;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.lipids.FoundLipid;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.FoundAdduct;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.params.MobilePhases;
import java.util.List;

// Declare the global list
global FoundLipid lipid;
global List mobilePhases;

 rule "Presence [M+CH3COO]-"
 when
     $adduct: FoundAdduct(adductName == "[M+CH3COO]-")
     $phase1 : MobilePhases() from mobilePhases
     eval($phase1 == MobilePhases.CH3COO)
 then
     
     lipid.setScore(1);
     lipid.setDescrCorrect("Contains [M+CH3COO]-; ");
 end
  rule "No presence [M+CH3COO]-"
  when
      not FoundAdduct(adductName == "[M+CH3COO]-")
      $phase1 : MobilePhases() from mobilePhases
      eval($phase1 == MobilePhases.CH3COO)
  then

      lipid.setScore(-1);
      lipid.setDescrIncorrect("Missing [M+CH3COO]-; ");
  end

 rule "Presence [M+HCOO]-"
 when
     $adduct: FoundAdduct(adductName == "[M+HCOO]-")
     $phase1 : MobilePhases() from mobilePhases
     eval($phase1 == MobilePhases.HCOO)
 then
     
     lipid.setScore(1);
     lipid.setDescrCorrect("Contains [M+HCOO]-; ");
 end

rule "Presence [M+Cl]-"
 when
     $adduct: FoundAdduct(adductName == "[M+Cl]-")
 then
     
     lipid.setScore(1);
     lipid.setDescrCorrect("Contains [M+Cl]-; ");
 end




rule "Intensity [M+CH3COO]- > [M+Cl]-"
when
    $adduct1: FoundAdduct(adductName == "[M+CH3COO]-")
    $adduct2: FoundAdduct(adductName == "[M+Cl]-")
    $phase1 : MobilePhases() from mobilePhases
    eval($phase1 == MobilePhases.CH3COO)
    eval($adduct1.getIntensity() > $adduct2.getIntensity())
then
    
    lipid.setScore(2);
    lipid.setDescrCorrect("Intensity OK [M+CH3COO]- > [M+Cl]-; ");
end

rule "Intensity [M+Cl]- > [M+HCOO]-"
when
    $adduct1: FoundAdduct(adductName == "[M+Cl]-")
    $adduct2: FoundAdduct(adductName == "[M+HCOO]-")
    $phase1 : MobilePhases() from mobilePhases
    eval($phase1 == MobilePhases.HCOO)
    eval($adduct1.getIntensity() > $adduct2.getIntensity())
then
    
    lipid.setScore(2);
    lipid.setDescrCorrect("Intensity OK [M+CH3COO]- > [M+HCOO]-; ");
end

rule "Intensity [M+CH3COO]- < [M+Cl]-"
when
    $adduct1: FoundAdduct(adductName == "[M+CH3COO]-")
    $adduct2: FoundAdduct(adductName == "[M+Cl]-")
    $phase1 : MobilePhases() from mobilePhases
    eval($phase1 == MobilePhases.CH3COO)
    eval($adduct1.getIntensity() < $adduct2.getIntensity())
then
    
    lipid.setScore(-2);
    lipid.setDescrIncorrect("Intensity NOT OK [M+CH3COO]- < [M+Cl]-; ");
end

rule "Intensity [M+Cl]- < [M+HCOO]-"
when
    $adduct1: FoundAdduct(adductName == "[M+Cl]-")
    $adduct2: FoundAdduct(adductName == "[M+HCOO]-")
    $phase1 : MobilePhases() from mobilePhases
    eval($phase1 == MobilePhases.HCOO)
    eval($adduct1.getIntensity() > $adduct2.getIntensity())
then
    
    lipid.setScore(-2);
    lipid.setDescrIncorrect("Intensity NOT OK [M+CH3COO]- < [M+HCOO]-; ");
end

rule "Intensity [M+HCOO]- > [M+CH3COO]-"
when
    $adduct1: FoundAdduct(adductName == "[M+HCOO]-")
    $adduct2: FoundAdduct(adductName == "[M+CH3COO]-")
    $phase1 : MobilePhases() from mobilePhases
    eval($phase1 == MobilePhases.HCOO)
    $phase2 : MobilePhases() from mobilePhases
    eval($phase2 == MobilePhases.CH3COO)
    eval($adduct1.getIntensity() > $adduct2.getIntensity())
then

    lipid.setScore(-2);
    lipid.setDescrIncorrect("Intensity NOT OK [M+HCOO]- > [M+CH3COO]-; ");
end