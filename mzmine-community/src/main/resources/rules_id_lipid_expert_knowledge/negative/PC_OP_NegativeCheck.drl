package rules_id_lipid_expert_knowledge.negative;

       import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.CommonAdductNegative;
       import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.lipids.FoundLipid;
       import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.FoundAdduct;
       import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.params.MobilePhases;
       import java.util.List;

// Declare the global list
       global FoundLipid lipid;
       global List mobilePhases;

       rule "Presence [M+CH3COO]-"
       when
           $adduct: FoundAdduct(adductName == "[M+CH3COO]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)
       then
           
           lipid.setScore(1);
           lipid.setDescrCorrect("Contains [M+CH3COO]-, ");
           lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
       end
       rule "No presence [M+CH3COO]-"
              when
                  not FoundAdduct(adductName == "[M+CH3COO]-")
                  $phase1 : MobilePhases() from mobilePhases
                  eval($phase1 == MobilePhases.CH3COO)
              then

                  lipid.setScore(-1);
                  lipid.setDescrIncorrect("Missing [M+CH3COO]-, ");
                  lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
              end

       rule "Presence [M+CH3COO+(CH3COONa)]-"
       when
           $adduct: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)
       then
           
           lipid.setScore(1);
           lipid.setDescrCorrect("Contains [M+CH3COO+(CH3COONa)]-, ");
           lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
       end

       rule "Presence [M+CH3COO+(CH3COONa)2]-"
       when
           $adduct: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)2]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)
       then
           
           lipid.setScore(1);
           lipid.setDescrCorrect("Contains [M+CH3COO+(CH3COONa)2]-, ");
           lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
       end


       rule "Presence [M+CH3COO+(CH3COONa)3]-"
       when
           $adduct: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)3]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)
       then
           
           lipid.setScore(1);
           lipid.setDescrCorrect("Contains [M+CH3COO+(CH3COONa)3]-, ");
           lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
       end


       rule "Presence [M+HCOO]-"
       when
           $adduct: FoundAdduct(adductName == "[M+HCOO]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.HCOO)
       then
           
           lipid.setScore(1);
           lipid.setDescrCorrect("Contains [M+HCOO]-, ");
           lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
       end


       rule "Presence [M+HCOO+(CH3COONa)]-"
       when
           $adduct: FoundAdduct(adductName == "[M+HCOO+(CH3COONa)]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)
           $phase2 : MobilePhases() from mobilePhases
           eval($phase2 == MobilePhases.HCOO)
       then
           
           lipid.setScore(1);
           lipid.setDescrCorrect("Contains [M+HCOO+(CH3COONa)]-, ");
           lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
       end


       rule "Presence [M+Cl]-"
       when
           $adduct: FoundAdduct(adductName == "[M+Cl]-")
       then
           
           lipid.setScore(1);
           lipid.setDescrCorrect("Contains [M+Cl]-, ");
           lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
       end


       rule "Presence [M+CH3COO-CH3COOCH3]-"
       when
           $adduct: FoundAdduct(adductName == "[M+CH3COO-CH3COOCH3]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)
       then
           
           lipid.setScore(1);
           lipid.setDescrCorrect("Contains [M+CH3COO-CH3COOCH3]-, ");
           lipid.setAppliedPresence(lipid.getAppliedPresence() + 1);
       end




       rule "Intensity [M+CH3COO]- > [M+CH3COO+(CH3COONa)]-"
       when
           $adduct1: FoundAdduct(adductName == "[M+CH3COO]-")
           $adduct2: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)

           eval($adduct1.getIntensity() > $adduct2.getIntensity())
       then
           
           lipid.setScore(2);
           lipid.setDescrCorrect("Intensity OK [M+CH3COO]- > [M+CH3COO+(CH3COONa)]-, ");
           lipid.setAppliedIntensity(lipid.getAppliedIntensity() + 1);
       end

       rule "Intensity [M+CH3COO+(CH3COONa)]- > [M+CH3COO+(CH3COONa)2]-"
       when
           $adduct1: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)]-")
           $adduct2: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)2]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)

           eval($adduct1.getIntensity() > $adduct2.getIntensity())
       then
           
           lipid.setScore(2);
           lipid.setDescrCorrect("Intensity OK [M+CH3COO+(CH3COONa)]- > [M+CH3COO+(CH3COONa)2]-, ");
           lipid.setAppliedIntensity(lipid.getAppliedIntensity() + 1);
       end

       rule "Intensity [M+CH3COO+(CH3COONa)]- > [M+CH3COO+(CH3COONa)3]-"
       when
           $adduct1: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)]-")
           $adduct2: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)3]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)

           eval($adduct1.getIntensity() > $adduct2.getIntensity())
       then
           
           lipid.setScore(2);
           lipid.setDescrCorrect("Intensity OK [M+CH3COO+(CH3COONa)]- > [M+CH3COO+(CH3COONa)3]-, ");
           lipid.setAppliedIntensity(lipid.getAppliedIntensity() + 1);
       end

       rule "Intensity [M+CH3COO]- < [M+CH3COO+(CH3COONa)]-"
              when
                  $adduct1: FoundAdduct(adductName == "[M+CH3COO]-")
                  $adduct2: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)]-")
                  $phase1 : MobilePhases() from mobilePhases
                  eval($phase1 == MobilePhases.CH3COO)

                  eval($adduct1.getIntensity() < $adduct2.getIntensity())
              then
                  
                  lipid.setScore(-2);
                  lipid.setDescrIncorrect("Intensity NOT OK [M+CH3COO]- < [M+CH3COO+(CH3COONa)]-, ");
                  lipid.setAppliedIntensity(lipid.getAppliedIntensity() + 1);
              end

       rule "Intensity [M+CH3COO+(CH3COONa)]- < [M+CH3COO+(CH3COONa)2]-"
           when
              $adduct1: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)]-")
              $adduct2: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)2]-")
              $phase1 : MobilePhases() from mobilePhases
              eval($phase1 == MobilePhases.CH3COO)

              eval($adduct1.getIntensity() < $adduct2.getIntensity())
           then
                  
              lipid.setScore(-2);
              lipid.setDescrIncorrect("Intensity NOT OK [M+CH3COO+(CH3COONa)]- < [M+CH3COO+(CH3COONa)2]-, ");
              lipid.setAppliedIntensity(lipid.getAppliedIntensity() + 1);
           end

       rule "Intensity [M+CH3COO+(CH3COONa)]- < [M+CH3COO+(CH3COONa)3]-"
           when
              $adduct1: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)]-")
              $adduct2: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)3]-")
              $phase1 : MobilePhases() from mobilePhases
              eval($phase1 == MobilePhases.CH3COO)

              eval($adduct1.getIntensity() < $adduct2.getIntensity())
           then
                  
               lipid.setScore(-2);
               lipid.setDescrIncorrect("Intensity NOT OK [M+CH3COO+(CH3COONa)]- < [M+CH3COO+(CH3COONa)3]-, ");
               lipid.setAppliedIntensity(lipid.getAppliedIntensity() + 1);
           end
       rule "Intensity [M+CH3COO]- < [M+CH3COO+(CH3COONa)2]-"
       when
           $adduct1: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)2]-")
           $adduct2: FoundAdduct(adductName == "[M+CH3COO]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)

           eval($adduct1.getIntensity() > $adduct2.getIntensity())
       then

           lipid.setScore(-2);
           lipid.setDescrIncorrect("Intensity NOT OK [M+CH3COO+(CH3COONa)2]- > [M+CH3COO]-, ");
           lipid.setAppliedIntensity(lipid.getAppliedIntensity() + 1);
       end
       rule "Intensity [M+CH3COO]- < [M+CH3COO+(CH3COONa)3]-"
       when
           $adduct1: FoundAdduct(adductName == "[M+CH3COO+(CH3COONa)3]-")
           $adduct2: FoundAdduct(adductName == "[M+CH3COO]-")
           $phase1 : MobilePhases() from mobilePhases
           eval($phase1 == MobilePhases.CH3COO)
           eval($adduct1.getIntensity() > $adduct2.getIntensity())
       then

           lipid.setScore(-2);
           lipid.setDescrIncorrect("Intensity NOT OK [M+CH3COO+(CH3COONa)3]- > [M+CH3COO]-, ");
           lipid.setAppliedIntensity(lipid.getAppliedIntensity() + 1);
       end