package rules_id_lipid_expert_knowledge.negative;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.CommonAdductNegative;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.lipids.FoundLipid;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.FoundAdduct;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.params.MobilePhases;
import java.util.List;

// Declare the global list
global FoundLipid lipid;
global List mobilePhases;

 rule "Presence [M-H]-"
 when
     $adduct: FoundAdduct(adductName == "[M-H]-")
 then
     
     lipid.setScore(1);
     lipid.setDescrCorrect("Contains [M-H]-, ");
 end
  rule "No presence [M-H]-"
  when
      not FoundAdduct(adductName == "[M-H]-")
  then

      lipid.setScore(-1);
      lipid.setDescrIncorrect("Missing [M-H]-, ");
  end

 rule "Presence [M-H+(CH3COONa)]-"
 when
     $adduct: FoundAdduct(adductName == "[M-H+(CH3COONa)]-")
     $phase1 : MobilePhases() from mobilePhases
     eval($phase1 == MobilePhases.CH3COO)

 then
     
     lipid.setScore(1);
     lipid.setDescrCorrect("Contains [M-H+(CH3COONa)]-, ");
 end




rule "Intensity [M-H]- > [M-H+(CH3COONa)]-"
when
    $adduct1: FoundAdduct(adductName == "[M-H]-")
    $adduct2: FoundAdduct(adductName == "[M-H+(CH3COONa)]-")
    $phase1 : MobilePhases() from mobilePhases
    eval($phase1 == MobilePhases.CH3COO)
    eval($adduct1.getIntensity() > $adduct2.getIntensity())
then
    
    lipid.setScore(2);
    lipid.setDescrCorrect("Intensity OK [M-H]- > [M-H+(CH3COONa)]-, ");
end

rule "Intensity [M-H]- < [M-H+(CH3COONa)]-"
when
    $adduct1: FoundAdduct(adductName == "[M-H]-")
    $adduct2: FoundAdduct(adductName == "[M-H+(CH3COONa)]-")
    $phase1 : MobilePhases() from mobilePhases
    eval($phase1 == MobilePhases.CH3COO)
    eval($adduct1.getIntensity() < $adduct2.getIntensity())
then
    
    lipid.setScore(-2);
    lipid.setDescrIncorrect("Intensity NOT OK [M-H]- < [M-H+(CH3COONa)]-, ");
end