package rules_id_lipid_expert_knowledge.negative;

import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.CommonAdductNegative;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.lipids.FoundLipid;
import io.github.mzmine.modules.dataprocessing.id_lipidid_expertknowledge.utils.adducts.FoundAdduct;

// Declare the global list
global java.util.List<FoundLipid> detectedLipids;
global FoundLipid lipid;


rule "Presence [M-H]-"
when
    $adduct: FoundAdduct(adductName == "[M-H]-")
then
    
    lipid.setScore(1);
    lipid.setDescrCorrect("Contains [M-H]-; ");
    //detectedLipids.add(lipid);
end

rule "Presence [M-H+(CH3COONa)]-"
when
    $adduct: FoundAdduct(adductName == "[M-H+(CH3COONa)]-")
then
    
    lipid.setScore(1);
    lipid.setDescrCorrect("Contains [M-H+(CH3COONa)]-; ");
    //detectedLipids.add(lipid);
end

rule "Intensity [M-H]- > [M-H+(CH3COONa)]-"
when
    $adduct1: FoundAdduct(adductName == "[M-H]-")
    $adduct2: FoundAdduct(adductName == "[M-H+(CH3COONa)]-")

    eval($adduct1.getIntensity() > $adduct2.getIntensity())
then
    
    lipid.setScore(1);
    lipid.setDescrCorrect("Intensity OK [M-H]- > [M-H+(CH3COONa)]-; ");
    //detectedLipids.add(lipid);
end

rule "Intensity [M-H]- < [M-H+(CH3COONa)]-"
when
    $adduct1: FoundAdduct(adductName == "[M-H]-")
    $adduct2: FoundAdduct(adductName == "[M-H+(CH3COONa)]-")

    eval($adduct1.getIntensity() < $adduct2.getIntensity())
then
    
    lipid.setScore(-1);
    lipid.setDescrIncorrect("Intensity NOT OK [M-H]- < [M-H+(CH3COONa)]-; ");
    //detectedLipids.add(lipid);
end